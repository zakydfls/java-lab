/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form_Barang;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Zaky Dafalas
 */
public class Barang extends javax.swing.JFrame {

    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
	    static final String DB_URL = "jdbc:mysql://127.0.0.1/javadb";
	    static final String USER = "root";
	    static final String PASS = "";
	    static final String checkQuery = "SELECT * FROM barang WHERE nm_brg=?";
	    
	    static Connection conn;
	    static Statement stmt;
	    static ResultSet rs;
	    static PreparedStatement ps;
    /**
     * Creates new form Barang
     */
    public Barang() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        insert = new javax.swing.JButton();
        txt_kode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_nama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_satuan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_stok = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_stok_min = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Kode Barang");

        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        txt_kode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_kodeActionPerformed(evt);
            }
        });

        jLabel2.setText("Nama Barang");

        txt_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_namaActionPerformed(evt);
            }
        });

        jLabel3.setText("Satuan");

        jLabel4.setText("Stok");

        jLabel5.setText("Stok Min");

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jScrollPane3.setViewportView(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(txt_kode, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(txt_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(txt_stok, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(36, 36, 36)
                            .addComponent(txt_stok_min, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(insert)
                        .addGap(21, 21, 21)
                        .addComponent(update)
                        .addGap(21, 21, 21)
                        .addComponent(delete)
                        .addGap(28, 28, 28)
                        .addComponent(clear)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_satuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_stok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_stok_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_kodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_kodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_kodeActionPerformed

    private void txt_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_namaActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        String kode = txt_kode.getText();
        String nama = txt_nama.getText();
        String satuan = txt_satuan.getText();
        int stok = Integer.parseInt(txt_stok.getText());
        int stok_min = Integer.parseInt(txt_stok_min.getText());
        if(!kode.isEmpty() && !nama.isEmpty()){
            insert(kode, nama, satuan, stok, stok_min);
            showtable();
            clear();
        }else{
            JOptionPane.showMessageDialog(null, "Silakan isi field kolom input terlebih dahulu!");
        }

    }//GEN-LAST:event_insertActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
//        int selectedRow = jTable1.getSelectedRow();
//        int id = (int) jTable1.getValueAt(selectedRow, 0);
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
                    String kode = txt_kode.getText();
                    String nama = txt_nama.getText();
                     String satuan = txt_satuan.getText();
                 int stok = Integer.parseInt(txt_stok.getText());
                    int stok_min = Integer.parseInt(txt_stok_min.getText());
              int id = (int) jTable1.getValueAt(selectedRow, 0); // Mengambil ID dari kolom pertama (index 0)
              update( kode, nama, satuan, stok, stok_min, id);
            } else {
               JOptionPane.showMessageDialog(null, "Silakan pilih baris dalam tabel terlebih dahulu!");
             }
        showtable();
        clear();
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
              int id = (int) jTable1.getValueAt(selectedRow, 0); // Mengambil ID dari kolom pertama (index 0)
              delete(id);
            } else {
               JOptionPane.showMessageDialog(null, "Silakan pilih baris dalam tabel terlebih dahulu!");
             }
        showtable();
        clear();
    }//GEN-LAST:event_deleteActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        showtable();
    }//GEN-LAST:event_formWindowOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        getData();
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
        public void showtable(){
        try{
            Class.forName(JDBC_DRIVER);	   
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID");
            model.addColumn("Kode Barang");
            model.addColumn("Nama Barang");
            model.addColumn("Satuan");
            model.addColumn("Stok");
            model.addColumn("Stok Barang");
 
            stmt = conn.createStatement();
            String sql = "SELECT * FROM barang";
            int i = 1;
            rs = stmt.executeQuery(sql);
            while(rs.next()) {
            	model.addRow(new Object[] {
                        rs.getInt("id"),
            		rs.getString("kd_brg"),
            		rs.getString("nm_brg"),
            		rs.getString("satuan"),
            		rs.getInt("stok_brg"),
                        rs.getInt("stok_min")
            	});
            	i++;
            }
            rs.close();
            conn.close();
            stmt.close();
            
            jTable1.setModel(model);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
        public void clear(){
        // TODO add your handling code here:
        txt_kode.setText("");
        txt_nama.setText("");
        txt_satuan.setText("");
        txt_stok.setText("");
        txt_stok_min.setText("");
    } 
        
        public void getData(){
        int baris = jTable1.getSelectedRow();
        txt_kode.setText(String.valueOf(jTable1.getValueAt(baris,1)));
        txt_nama.setText(String.valueOf(jTable1.getValueAt(baris,2)));
        txt_satuan.setText(String.valueOf(jTable1.getValueAt(baris, 3)));
        txt_stok.setText(String.valueOf(jTable1.getValueAt(baris, 4)));
        txt_stok_min.setText(String.valueOf(jTable1.getValueAt(baris, 5)));
    }
    private boolean checkIDExists(int id) {
        boolean exists = false;
        try {
            conn = DriverManager.getConnection(DB_URL,USER,PASS);
            PreparedStatement statement = conn.prepareStatement("SELECT id FROM barang WHERE id = ?");
            statement.setInt(1, id);
            ResultSet resultSet = statement.executeQuery();
            exists = resultSet.next();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return exists;
    }        
    public void update(String newKode, String newNama, String newSatuan, int newStok, int newStokMin, int id) {
	try {
		Class.forName(JDBC_DRIVER);
		conn = DriverManager.getConnection(DB_URL,USER,PASS);
                boolean exists = checkIDExists(id);
                if(exists){
                        ps = conn.prepareStatement("UPDATE barang SET kd_brg=?, nm_brg=?, satuan=?, stok_brg=?, stok_min=? WHERE id=?");
                        ps.setString(1, newKode);
	                ps.setString(2, newNama);
	                ps.setString(3, newSatuan);
	                ps.setInt(4, newStok);
	                ps.setInt(5, newStokMin);
	                ps.setInt(6, id);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data berhasil diupdate!");
                }else{
                    JOptionPane.showMessageDialog(null, "Data dengan ID tersebut tidak ditemukan!");
                }
                stmt.close();
                conn.close();
		} catch(Exception e)
		{
		e.printStackTrace();
		}
	}
    public void delete(int id){
        try{
            Class.forName(JDBC_DRIVER);
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            boolean exists = checkIDExists(id);
                if(exists){
                        ps = conn.prepareStatement("DELETE FROM barang WHERE id=?");
	                ps.setInt(1, id);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                }else{
                    JOptionPane.showMessageDialog(null, "Data dengan ID tersebut tidak ditemukan!");
                }
            stmt.close();
            conn.close();
        }catch(Exception e)
		{
		e.printStackTrace();
		}
    }
    public void insert(String kode_brg, String nama_brg, String satuan, int stok,int stok_min)
		{
			try {
                            Class.forName(JDBC_DRIVER);
                            conn = DriverManager.getConnection(DB_URL,USER,PASS);
                            stmt = conn.createStatement();
                            if (isKodeBarangExists(conn, kode_brg)) {
                            JOptionPane.showMessageDialog(null, "Insert data gagal, kode barang sudah dipakai!");
                            } else {
				
				String sql = "INSERT INTO barang (kd_brg,nm_brg,satuan,stok_brg,stok_min) VALUES (?,?,?,?,?)";
				ps = conn.prepareStatement(sql);
				
				ps.setString(1, kode_brg);
				ps.setString(2, nama_brg);
				ps.setString(3, satuan);
				ps.setInt(4, stok);
				ps.setInt(5, stok_min);
				ps.execute();
                                JOptionPane.showMessageDialog(null, "Insert data berhasil!");
				
				stmt.close();
				conn.close();
                            }
			}
			catch(Exception e) {
				e.printStackTrace();
			}
		} 
    private static boolean isKodeBarangExists(Connection conn, String kodeBarang) throws SQLException {
        PreparedStatement stmt = null;
        ResultSet resultSet = null;
        try {
            stmt = conn.prepareStatement("SELECT COUNT(*) AS count FROM barang WHERE kd_brg = ?");
            stmt.setString(1, kodeBarang);
            resultSet = stmt.executeQuery();
            if (resultSet.next()) {
                int count = resultSet.getInt("count");
                return count > 0;
            }
        } finally {
            if (resultSet != null) {
                resultSet.close();
            }
            if (stmt != null) {
                stmt.close();
            }
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_kode;
    private javax.swing.JTextField txt_nama;
    private javax.swing.JTextField txt_satuan;
    private javax.swing.JTextField txt_stok;
    private javax.swing.JTextField txt_stok_min;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
